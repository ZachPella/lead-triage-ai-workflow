{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -16,
        528
      ],
      "id": "3e95dfc0-d0c5-40d8-9095-76eae526718e",
      "name": "When clicking ‘Execute workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20240620",
        "options": {
          "thinking": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1,
      "position": [
        432,
        784
      ],
      "id": "01bf1eb7-5fd1-40a9-9372-785be738f1fd",
      "name": "Anthropic Chat Model1",
      "credentials": {
        "anthropicApi": {
          "id": "HpMiR6i2MlraPwyj",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "content": "## AI Agent Shell",
        "height": 380,
        "width": 1120,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        1360
      ],
      "id": "2a3f3a8c-b8b9-4489-abc2-a822832a3254",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Chat Model (LLM)\n",
        "height": 400,
        "width": 720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        32,
        1760
      ],
      "id": "e36f3f10-0271-44ef-87a1-25a15a78a642",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Sample Inbound Messages",
        "height": 380,
        "width": 480,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        32,
        1360
      ],
      "id": "66a88b33-ef20-492f-bb37-b59b39a0ab13",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# INBOUND LEAD-TRIAGE AGENT FOR LEDGERLIFT- COMPLETE WORKFLOW\n- LedgerLift is a ficticious Finance Automation Software/Agency\n- Inbound leads hit their website form, referrals, email, etc. → they land in a Google Sheet.\n- Our AI Lead Triage Agent processes each one, tags it with priority + category + next_action, and drafts an email reply when needed.\n",
        "width": 1620,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        32,
        1168
      ],
      "id": "fe7b40b3-6b53-4452-aecf-3a120d273da1",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw",
          "mode": "list",
          "cachedResultName": "LedgerLiftDB - AI Agents in n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1518686381,
          "mode": "list",
          "cachedResultName": "Leads Database",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit#gid=1518686381"
        },
        "event": "rowAdded",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        192,
        1504
      ],
      "id": "70a9e150-29d5-4734-9228-e3e7de9bd346",
      "name": "Google Sheets Trigger",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "HEKtAb4btJ3ADJJX",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "content": "# INBOUND LEAD-TRIAGE AGENT - EMPTY, START HERE\n",
        "width": 1620,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        2352
      ],
      "id": "dac57d92-91a2-46be-bf1b-50ddb95701a3",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# AI Agent Anatomy\n",
        "width": 1680,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "0260464c-dacd-430b-a57b-52bd114b217d",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Some Other AI Agent Use Cases\n- Customer and Bookings Support\n- Sales Agent\n- Prospecting\n- Content Research and Generation\n- Personal Assistant",
        "height": 244,
        "width": 372,
        "color": 7
      },
      "id": "ff3e54cb-1595-48a3-9f1c-62560f405464",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        2160,
        512
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "toolDescription": "Gets the latest blog posts about any rss feed.",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', `Use one of:\n- https://feeds.bbci.co.uk/news/world/rss.xml (BBC World – global headlines)\n- https://www.aljazeera.com/xml/rss/all.xml (Al Jazeera English – in‑depth global coverage)\n- http://rss.cnn.com/rss/edition_world.rss (CNN World – breaking news worldwide)\n- https://techcrunch.com/feed/ (TechCrunch – global tech & startup news)\n- http://news.ycombinator.com/rss (Hacker News – tech community headlines)\n- https://n8n.io/blog/rss (n8n Blog – updates & tutorials)\n- https://www.bonappetit.com/feed/recipes-rss-feed/rss (Bon Appétit – recent recipes list)\n- https://www.endsreport.com/rss/news-and-analysis (ENDS Report – environmental law & policy news)\n- https://medlineplus.gov/groupfeeds/new.xml (MedlinePlus – health topics & wellness updates)`, 'string') }}",
        "options": {}
      },
      "id": "bea9a46a-6975-4ac7-907a-778e1675aec7",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Get News",
      "type": "n8n-nodes-base.rssFeedReadTool",
      "creator": "Lucas Peyrin",
      "position": [
        1232,
        864
      ],
      "typeVersion": 1.2,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "toolDescription": "Get weather forecast anywhere, anytime. You can make requests by assuming most information, the only thing you need is the location (use the city name to infer lat and long automatically) and time period (assume today if not specified)",
        "url": "https://api.open-meteo.com/v1/forecast",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "latitude",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `Latitude of the location, e.g. 45.75 for Lyon. Do not ask the user just infer it automatically.`, 'string') }}"
            },
            {
              "name": "longitude",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Longitude of the location, e.g. 4.85 for Lyon. Do not ask the user just infer it automatically.`, 'string') }}"
            },
            {
              "name": "current",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Comma-separated list of current weather variables (no whitespace).\n\nExample: temperature_2m,windspeed_10m,rain.\n\nOptions: temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weathercode,cloudcover_total,pressure_msl,surface_pressure,windspeed_10m,winddirection_10m,windgusts_10m.`, 'string') }}"
            },
            {
              "name": "hourly",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Comma-separated list of hourly weather variables (no whitespace). Hourly is only useful to get one day's information. For weakly overview please use daily.\n\nExample: temperature_2m,precipitation.\n\nOptions: temperature_2m,relative_humidity_2m,dewpoint_2m,apparent_temperature,precipitation,rain,showers,snowfall,snow_depth,pressure_msl,surface_pressure,cloudcover_total,cloudcover_low,cloudcover_mid,cloudcover_high,windspeed_10m,winddirection_10m,windgusts_10m,visibility,is_day,sunshine_duration,soil_temperature,soil_moisture,PM10,PM2_5,carbon_monoxide,ozone,us_aqi,UV_index.`, 'string') }}"
            },
            {
              "name": "daily",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Comma-separated list of daily weather variables (no whitespace).\n\nExample: temperature_2m_max,precipitation_sum.\n\nOptions: weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,sunrise,sunset,daylight_duration,sunshine_duration,pressure_msl_max,pressure_msl_min,surface_pressure_max,surface_pressure_min,windgusts_10m_max,windspeed_10m_max,winddirection_10m_dominant,shortwave_radiation_sum.`, 'string') }}"
            },
            {
              "name": "start_date",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', `Start date in YYYY-MM-DD format. Example: 2025-07-15`, 'string') }}"
            },
            {
              "name": "end_date",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters6_Value', `End date in YYYY-MM-DD format. Must be after start_date. Example: 2025-07-18`, 'string') }}"
            },
            {
              "name": "temperature_unit",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters7_Value', `Unit for temperature. Options: celsius (default), fahrenheit.`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9691d4ed-ec34-40e8-a66a-16d69ab9bc4a",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Get Weather",
      "type": "n8n-nodes-base.httpRequestTool",
      "creator": "Lucas Peyrin",
      "position": [
        1088,
        864
      ],
      "notesInFlow": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! 👋",
        "options": {
          "inputPlaceholder": "Type your message here...",
          "showWelcomeScreen": false,
          "subtitle": "This is for demo purposes. Try me out !",
          "title": "Your first AI Agent 🚀",
          "responseMode": "lastNode"
        }
      },
      "id": "2e5711d7-65bb-480b-8cad-c5da5f677b7d",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Example Chat",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "creator": "Lucas Peyrin",
      "position": [
        464,
        416
      ],
      "webhookId": "e5616171-e3b5-4c39-81d4-67409f9fa60a",
      "typeVersion": 1.1,
      "disabled": true,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "contextWindowLength": 30
      },
      "id": "198be098-8b8d-433c-bff0-00d25dfc9933",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Conversation Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "creator": "Lucas Peyrin",
      "position": [
        784,
        864
      ],
      "typeVersion": 1.3,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## Tools",
        "height": 400,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        768,
        1760
      ],
      "id": "0f8583ca-2b42-491e-b393-d8df621837cd",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update the current lead’s row matched by email. Always set:\n- processed_by_ai = \"Y\"\n- priority, category, next_action, assignee_email (from your analysis)\n\nNever modify name, company, role, message, or source.\n",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw",
          "mode": "list",
          "cachedResultName": "LedgerLiftDB - AI Agents in n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1518686381,
          "mode": "list",
          "cachedResultName": "Leads Database",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit#gid=1518686381"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Id__using_to_match_', `the unique Id of each row to use when updating a row`, 'string') }}",
            "row_number": 0,
            "assigned to ": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('assigned_to_', ``, 'string') }}",
            "next_action": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('next_action', ``, 'string') }}",
            "category": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('category', ``, 'string') }}",
            "priority": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('priority', ``, 'string') }}"
          },
          "matchingColumns": [
            "Id"
          ],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "company",
              "displayName": "company",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "role",
              "displayName": "role",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "category",
              "displayName": "category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "next_action",
              "displayName": "next_action",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "assigned to ",
              "displayName": "assigned to ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        880,
        1920
      ],
      "id": "31cfead2-85c5-4619-9b9c-b1dd748464f7",
      "name": "Update Google Sheet Row",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UZVEbBP9EwyT7L7b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To_Email', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1488,
        1920
      ],
      "id": "46438d3e-6522-4e20-a1d1-10734b034132",
      "name": "Create Gmail Draft",
      "webhookId": "63b9865d-ca25-41d5-9dbd-5e15d2e79f96",
      "credentials": {
        "gmailOAuth2": {
          "id": "wTEayuvqdscPTITN",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google SheetsFind the owner for a given category. Input: category (demo|security|support|pricing|sales).\nOutput: owner_name, owner_email. Use this before creating an email draft.\n",
        "documentId": {
          "__rl": true,
          "value": "1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw",
          "mode": "list",
          "cachedResultName": "LedgerLiftDB - AI Agents in n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2091279160,
          "mode": "list",
          "cachedResultName": "Team Routing Info",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit#gid=2091279160"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "category",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1104,
        1920
      ],
      "id": "bc8e79e8-0d16-4911-8c06-7d54f56a1e2b",
      "name": "Lookup Owner (Team Routing)",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UZVEbBP9EwyT7L7b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw",
          "mode": "list",
          "cachedResultName": "LedgerLiftDB - AI Agents in n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1410708331,
          "mode": "list",
          "cachedResultName": "Subject and Body Templates",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZSNdeMd6vSAHOsFmnBl2lZ_a2e-1tnywKVUTXdtZJEw/edit#gid=1410708331"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1280,
        1920
      ],
      "id": "38c7ab55-02fb-4218-b8cb-7a72c18f0397",
      "name": "Search Subject and Body Templates",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UZVEbBP9EwyT7L7b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Chat Trigger Node\n💡 Later, activate this workflow and share the public chat URL to let others talk to your AI Agent!",
        "height": 412,
        "width": 320,
        "color": 7
      },
      "id": "1c3bb623-4951-44fc-86fe-a5cb1845e62f",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        352,
        208
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## AI Agent Framework\nYour AI agent can:\n1. **Receive** messages from the chat (or other forms of input)\n2. **Select** the right tools (e.g., weather, news, email)\n3. **Respond** with live, helpful answers\n\n\n**Open the AI agent node** and edit the **System Message** to adjust your agent’s thinking, behavior, and replies.\n\n\n\n\n\n\n\n\n\n\n",
        "height": 408,
        "width": 716,
        "color": 7
      },
      "id": "dc855755-5c9f-4cd9-a374-f4479e4de1a8",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        688,
        208
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## Chat Model (LLM)\nThis Large Language Model powers the AI Agent Framework\n",
        "height": 396,
        "width": 314,
        "color": 7
      },
      "id": "4e387339-78ab-4575-9c12-06e2d5d57553",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        352,
        624
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## Memory\nThis node helps your agent remember the last few messages to stay on topic.\n\nIt can be simple memory (non-persistent) or persistent, by storing all the chat memory on a production database.",
        "height": 400,
        "width": 308,
        "color": 7
      },
      "id": "2fa403e4-4c73-415a-a0be-529623b1f280",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        688,
        624
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## Tools\nThese tools let your agent access real-world data or take actions. Add more to expand its abilities!\n\nClick the 'plus' under the agent’s Tool input to add:\n- Google Calendar (Get Upcoming Events)\n- Gmail (Send an Email) (Gmail)",
        "height": 404,
        "width": 392,
        "color": 7
      },
      "id": "c4f629d9-c779-4bbf-8927-e9eeedcb86ad",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        1008,
        624
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "## Manual Trigger Node\n💡 The Universal Node to Test Typical Automation Workflows",
        "height": 412,
        "width": 300,
        "color": 7
      },
      "id": "47ebdbba-8037-4cec-a352-2912d24605b1",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        -96,
        368
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "You are a helpful assistant"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        912,
        432
      ],
      "id": "51916db0-6f21-4e6e-845c-776ad6e95e57",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Row Id: {{ $json.Id }}\nName: {{ $json.name }}\nEmail: {{ $json.email }}\nCompany: {{ $json.company }}\nRole: {{ $json.role }}\nMessage: {{ $json.message }}",
        "options": {
          "systemMessage": "=## Role\nYou are **LeadTriageAgent** for LedgerLift (B2B finance-automation agency). For each new row from Google Sheets you: classify the lead, prioritize it, route it to the right owner, **update the same row by its `id`**, and—when useful—create a human, well-formatted Gmail draft (never auto-send).\n\n## Inputs (from trigger)\n`id`, `name`, `email`, `company`, `role`, `message`.  \nAll messages originate from email.\n\n## Sheets you may use\n1. **Leads Database** — write only: `priority`, `category`, `next_action`, `assignee_email`.\n2. **Team Routing Info** — lookup owner by `category` (columns: `category`, `owner_name`, `owner_email`).\n3. **Email Templates** — optional subject/body snippets by (`category`, `audience` = internal | prospect). Placeholders you may fill: `<name>`, `<company>`, `<message>`, `<priority>`, `<assignee_email>`. If a placeholder has no value (for example `<booking_link>` or `<signature>`), leave it as-is or omit that line.\n\n## Tools\n- **Lookup Owner (Team Routing Info)** → input: decided `category` → output: `owner_email`.\n- **Search Subject & Body Templates** → input: `category`, `audience` → output: `subject_template`, `body_template`, `cc_default` (optional).\n- **Update Google Sheet Row** → **must match by `id`**; write: `priority`, `category`, `next_action`, `assignee_email`.\n- **Create Gmail Draft** → set **To**, **Subject**, **Message** (plain text). If `cc_default` is present and CC isn’t supported, ignore it.\n\n## Decision policy (in order)\n\n1) **Classify & prioritize**\n- **priority**:  \n  - high — enterprise/security/approved pilot/explicit urgency or budget  \n  - medium — mid-market with concrete need or referral  \n  - low — small/vague early interest  \n  - spam — crypto/affiliate/promo/unrelated\n- **category**:  \n  - demo — demo/pilot/trial/sandbox requests  \n  - security — SOC2/ISO/SSO/BAA/DPA/security reviews  \n  - support — login/API/webhook/billing issues  \n  - pricing — pricing/tiers/seat counts  \n  - sales — general evaluation not covered above  \n  - spam — promotional/irrelevant\n\n2) **Routing**\n- If category in {demo, security, support, pricing, sales}: call **Lookup Owner** and set `assignee_email` from the result. If none, use `sales@ledgerlift.com`.\n\n3) **Update row (always)**\n- Call **Update Google Sheet Row** with `id` and write:\n  - `priority` = your decision  \n  - `category` = your decision  \n  - `next_action` = one specific imperative step (for example: “Schedule 30-min discovery this week and include short security overview”)  \n  - `assignee_email` = looked-up owner or fallback\n\n4) **Draft creation (when it adds value)**\n- **Audience selection**:  \n  - demo, security → **internal** (to `assignee_email`)  \n  - support, pricing, sales → **prospect** (to lead’s `email`; optionally mention assignee inside the body)\n- Try **Search Subject & Body Templates** with (`category`, chosen `audience`). If found, adapt the templates and safely replace known placeholders; otherwise compose fresh.\n- **Internal handoff (demo/security)** — Subject: “New <category> lead — <company> — <name>”.  \n  Body: one-line need/urgency, key context (role/stack), proposed next step with timing, prospect email.\n- **Prospect reply (support/pricing/sales)** — Subject: “Re: <company> — next steps”.  \n  Body: warm acknowledgement, concise answer or link, one clarifying question if helpful, clear CTA (book/reply).  \n- **Spam** — no draft.\n\n## Style for drafts\nHuman and professional; short paragraphs or bullets; specific next steps; avoid hard commitments on pricing/timelines; no jargon.\n\n## Safety & determinism\n- Never modify original input fields (`name`, `email`, `company`, `role`, `message`).  \n- **Always pass `id`** to the update tool.  \n- If any tool fails, still update the row with a useful `next_action` and `assignee_email = sales@ledgerlift.com`; skip the draft.\n\n## Output behavior\nPrefer taking actions via tools rather than free text. Every run must **at minimum** update the row (priority, category, next_action, assignee_email). Create a draft only per the rules above."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        912,
        1504
      ],
      "id": "804c5b66-6f76-44b6-91d6-627db130bdde",
      "name": "Lead Triage Agent"
    },
    {
      "parameters": {
        "content": "# SYSTEM PROMPT\n## Role\nYou are **LeadTriageAgent** for LedgerLift (B2B finance-automation agency). For each new row from Google Sheets you: classify the lead, prioritize it, route it to the right owner, **update the same row by its `id`**, and—when useful—create a human, well-formatted Gmail draft (never auto-send).\n\n## Inputs (from trigger)\n`id`, `name`, `email`, `company`, `role`, `message`.  \nAll messages originate from email.\n\n## Sheets you may use\n1. **Leads Database** — write only: `priority`, `category`, `next_action`, `assignee_email`.\n2. **Team Routing Info** — lookup owner by `category` (columns: `category`, `owner_name`, `owner_email`).\n3. **Email Templates** — optional subject/body snippets by (`category`, `audience` = internal | prospect). Placeholders you may fill: `<name>`, `<company>`, `<message>`, `<priority>`, `<assignee_email>`. If a placeholder has no value (for example `<booking_link>` or `<signature>`), leave it as-is or omit that line.\n\n## Tools\n- **Lookup Owner (Team Routing Info)** → input: decided `category` → output: `owner_email`.\n- **Search Subject & Body Templates** → input: `category`, `audience` → output: `subject_template`, `body_template`, `cc_default` (optional).\n- **Update Google Sheet Row** → **must match by `id`**; write: `priority`, `category`, `next_action`, `assignee_email`.\n- **Create Gmail Draft** → set **To**, **Subject**, **Message** (plain text). If `cc_default` is present and CC isn’t supported, ignore it.\n\n## Decision policy (in order)\n\n1) **Classify & prioritize**\n- **priority**:  \n  - high — enterprise/security/approved pilot/explicit urgency or budget  \n  - medium — mid-market with concrete need or referral  \n  - low — small/vague early interest  \n  - spam — crypto/affiliate/promo/unrelated\n- **category**:  \n  - demo — demo/pilot/trial/sandbox requests  \n  - security — SOC2/ISO/SSO/BAA/DPA/security reviews  \n  - support — login/API/webhook/billing issues  \n  - pricing — pricing/tiers/seat counts  \n  - sales — general evaluation not covered above  \n  - spam — promotional/irrelevant\n\n2) **Routing**\n- If category in {demo, security, support, pricing, sales}: call **Lookup Owner** and set `assignee_email` from the result. If none, use `sales@ledgerlift.com`.\n\n3) **Update row (always)**\n- Call **Update Google Sheet Row** with `id` and write:\n  - `priority` = your decision  \n  - `category` = your decision  \n  - `next_action` = one specific imperative step (for example: “Schedule 30-min discovery this week and include short security overview”)  \n  - `assignee_email` = looked-up owner or fallback\n\n4) **Draft creation (when it adds value)**\n- **Audience selection**:  \n  - demo, security → **internal** (to `assignee_email`)  \n  - support, pricing, sales → **prospect** (to lead’s `email`; optionally mention assignee inside the body)\n- Try **Search Subject & Body Templates** with (`category`, chosen `audience`). If found, adapt the templates and safely replace known placeholders; otherwise compose fresh.\n- **Internal handoff (demo/security)** — Subject: “New <category> lead — <company> — <name>”.  \n  Body: one-line need/urgency, key context (role/stack), proposed next step with timing, prospect email.\n- **Prospect reply (support/pricing/sales)** — Subject: “Re: <company> — next steps”.  \n  Body: warm acknowledgement, concise answer or link, one clarifying question if helpful, clear CTA (book/reply).  \n- **Spam** — no draft.\n\n## Style for drafts\nHuman and professional; short paragraphs or bullets; specific next steps; avoid hard commitments on pricing/timelines; no jargon.\n\n## Safety & determinism\n- Never modify original input fields (`name`, `email`, `company`, `role`, `message`).  \n- **Always pass `id`** to the update tool.  \n- If any tool fails, still update the row with a useful `next_action` and `assignee_email = sales@ledgerlift.com`; skip the draft.\n\n## Output behavior\nPrefer taking actions via tools rather than free text. Every run must **at minimum** update the row (priority, category, next_action, assignee_email). Create a draft only per the rules above.",
        "height": 800,
        "width": 1300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1680,
        1360
      ],
      "id": "8544210d-60fd-4930-b384-e944bff48827",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Sample Inbound Messages",
        "height": 380,
        "width": 480,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        2528
      ],
      "id": "72e8761a-f238-460f-b787-442959b73326",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## AI Agent Shell",
        "height": 380,
        "width": 1120,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        512,
        2528
      ],
      "id": "07d5fa4d-ecd9-4ffa-8058-68dac73a72ff",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Chat Model (LLM)\n",
        "height": 400,
        "width": 720,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        2928
      ],
      "id": "b47edcec-ec4b-4df1-96a0-94d18f417e29",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## Tools",
        "height": 400,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        752,
        2928
      ],
      "id": "81eb8c41-4abd-4db7-87f4-5f5cf8cc2c41",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "## Prompt\nInstructions we give to the AI Agent/LLM\n\n- System Prompt : The instructions that the AI Agent/LLM takes that determines the goal, the behaviour/s and format of the output.\n- User Prompt : The actual input that the AI Agent LLM.",
        "height": 264,
        "width": 372,
        "color": 7
      },
      "id": "ac565a47-da1b-4acd-b29f-14e838b2e5d9",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        1440,
        480
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "content": "# Create an account in n8n: https://n8n.partnerlinks.io/franknillard \n\n\n# Join us in a 5-Day Live Challenge where you’ll learn how to make your first dollar online with n8n (and also get my 3 most essential n8n automations for free): https://www.neural-architects.com/\n",
        "height": 344,
        "width": 1372,
        "color": 7
      },
      "id": "cbe8a9c6-2c60-4222-ac60-565f8719f2ce",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "creator": "Lucas Peyrin",
      "position": [
        1712,
        2688
      ],
      "typeVersion": 1,
      "notes": "© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20240620",
        "options": {
          "thinking": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1,
      "position": [
        304,
        1968
      ],
      "id": "cfcb0815-cacd-4edf-b0b4-a767b021f0e9",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "HpMiR6i2MlraPwyj",
          "name": "Anthropic account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Google Sheet Row": {
      "ai_tool": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Gmail Draft": {
      "ai_tool": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Lookup Owner (Team Routing)": {
      "ai_tool": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Subject and Body Templates": {
      "ai_tool": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Example Chat": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Weather": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get News": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Lead Triage Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "73a82d8d-cf7d-4992-9a02-8c37e94362e0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f5016484d310a9a750db48f2d252549af1079db5e5113e5fa1427acbc8d25bef"
  },
  "id": "Ia1fSMHTvV1clq2s",
  "tags": []
}
